@using Account_Task.BLL.Interfaces;
@inject IUsersRepositories User
@inject IUnitOfWork unitOfWork
@model Account
@{
    ViewData["Title"] = "Create";
}
@{
  // var User = new SelectList(ViewBag.User, "Id", "Username");
    var User = new SelectList(unitOfWork.usersRepositories.GetAll(), "Id", "Username");
}
<h1>Create New Account</h1>
<br />
<br />
<form asp-action="Create">
    
    <div class="form-group">
        <label class="col-form-label" asp-for="Account_Number"></label>
        <input asp-for="Account_Number" class="form-control" />
        <span class="text-danger" asp-validation-for="Account_Number"></span>
    </div>
    <div class="form-group">
        <label class="col-form-label" asp-for="Balance"></label>
        <input asp-for="Balance" class="form-control" />
        <span class="text-danger" asp-validation-for="Balance"></span>
    </div>

    <div class="form-group">
        <label class="col-form-label" asp-for="Currency"></label>
        <select class="form-control" asp-for="Currency" asp-items="Html.GetEnumSelectList<Currency>()">
            <option value="">--Please Choose you Status </option>
        </select>
    </div>
    <div class="form-group">
        <label class="col-form-label" asp-for="Users"></label>
        <select class="form-control" asp-for="UsersId" asp-items="@User">
            <option value="@null">---Select User---</option>
       </select>
    </div>
    <div class="form-group">
        <label class="col-form-label" asp-for="Status"></label>
        <select class="form-control" asp-for="Status" asp-items="Html.GetEnumSelectList<Status>()">
            <option value="">--Please Choose you Status </option>
       </select>
    </div>

    <br />
    <br />
    <br />
    <input type="submit" value="Submit" class="btn btn-primary" />

    <a asp-action="Index" class="btn btn-light">Back to List</a>
</form>

